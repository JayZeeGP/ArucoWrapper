/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class wrapper_MarkerDetector */

#ifndef _Included_wrapper_MarkerDetector
#define _Included_wrapper_MarkerDetector
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     wrapper_MarkerDetector
 * Method:    Jdetect
 * Signature: (JLjava/util/ArrayList;Lwrapper/CameraParameters;F)V
 */
JNIEXPORT void JNICALL Java_wrapper_MarkerDetector_Jdetect
  (JNIEnv *, jobject, jlong, jobject, jobject, jfloat);

/*
 * Class:     wrapper_MarkerDetector
 * Method:    JMarkerDetector
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_wrapper_MarkerDetector_JMarkerDetector
  (JNIEnv *, jobject);

/*
 * Class:     wrapper_MarkerDetector
 * Method:    JgetDesiredSpeed
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_wrapper_MarkerDetector_JgetDesiredSpeed
  (JNIEnv *, jobject);

/*
 * Class:     wrapper_MarkerDetector
 * Method:    JsetDesiredSpeed
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_wrapper_MarkerDetector_JsetDesiredSpeed
  (JNIEnv *, jobject, jint);

/*
 * Class:     wrapper_MarkerDetector
 * Method:    JsetThresholdMethod
 * Signature: (Lwrapper/MarkerDetector/ThresholdMethods;)V
 */
JNIEXPORT void JNICALL Java_wrapper_MarkerDetector_JsetThresholdMethod
  (JNIEnv *, jobject, jobject);

/*
 * Class:     wrapper_MarkerDetector
 * Method:    JgetThresholdMethod
 * Signature: ()Lwrapper/MarkerDetector/ThresholdMethods;
 */
JNIEXPORT jobject JNICALL Java_wrapper_MarkerDetector_JgetThresholdMethod
  (JNIEnv *, jobject);

/*
 * Class:     wrapper_MarkerDetector
 * Method:    JsetThresholdParams
 * Signature: (DD)V
 */
JNIEXPORT void JNICALL Java_wrapper_MarkerDetector_JsetThresholdParams
  (JNIEnv *, jobject, jdouble, jdouble);

/*
 * Class:     wrapper_MarkerDetector
 * Method:    JgetThresholdedImage
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_wrapper_MarkerDetector_JgetThresholdedImage
  (JNIEnv *, jobject, jlong);

/*
 * Class:     wrapper_MarkerDetector
 * Method:    JsetCornerRefinementMethod
 * Signature: (Lwrapper/MarkerDetector/CornerRefinementMethod;)V
 */
JNIEXPORT void JNICALL Java_wrapper_MarkerDetector_JsetCornerRefinementMethod
  (JNIEnv *, jobject, jobject);

/*
 * Class:     wrapper_MarkerDetector
 * Method:    JgetCornerRefinementMethod
 * Signature: ()Lwrapper/MarkerDetector/CornerRefinementMethod;
 */
JNIEXPORT jobject JNICALL Java_wrapper_MarkerDetector_JgetCornerRefinementMethod
  (JNIEnv *, jobject);

/*
 * Class:     wrapper_MarkerDetector
 * Method:    JsetMinMaxSize
 * Signature: (FF)V
 */
JNIEXPORT void JNICALL Java_wrapper_MarkerDetector_JsetMinMaxSize
  (JNIEnv *, jobject, jfloat, jfloat);

/*
 * Class:     wrapper_MarkerDetector
 * Method:    JenableErosion
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_wrapper_MarkerDetector_JenableErosion
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     wrapper_MarkerDetector
 * Method:    JpyrDown
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_wrapper_MarkerDetector_JpyrDown
  (JNIEnv *, jobject, jint);

/*
 * Class:     wrapper_MarkerDetector
 * Method:    Jthreshold
 * Signature: (IJJDD)V
 */
JNIEXPORT void JNICALL Java_wrapper_MarkerDetector_Jthreshold
  (JNIEnv *, jobject, jint, jlong, jlong, jdouble, jdouble);

/*
 * Class:     wrapper_MarkerDetector
 * Method:    Jwarp
 * Signature: (Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DDLjava/util/ArrayList;)Z
 */
JNIEXPORT jboolean JNICALL Java_wrapper_MarkerDetector_Jwarp
  (JNIEnv *, jobject, jobject, jobject, jdouble, jdouble, jobject);

#ifdef __cplusplus
}
#endif
#endif